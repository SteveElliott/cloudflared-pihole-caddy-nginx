# dhcphelper relay support Based on :
# https://github.com/homeall/dhcphelper
# https://www.baeldung.com/ops/docker-assign-static-ip-container
# https://ilyess.cc/posts/pihole-dhcp-docker-bridge-network/
#
# NOTE: 
# - docker default bridge networks get allocated IP pools 172.{17..31}.0.0/12 in turn.
# - for static IP allocation we claim the last subnet 172.31.0.0/12
#
networks:
  srvr:
    name: srvr 
  # static:
  #   name: static
  #   ipam:
  #     config:
  #       - subnet: 172.31.0.0/16
  #         gateway: 172.31.0.1

services:
# Testing and diagnostic services
  nginx:
    image: nginx:${NGINX_TAG}
    container_name: nginx
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - srvr
    expose:
      - 80

  cloudflared:
    container_name: cloudflared
    image: erisamoe/cloudflared:${CLOUDFLARED_TAG}
    restart: unless-stopped
    command: tunnel run 
    environment:
      TUNNEL_DNS: "true"
      TUNNEL_DNS_ADDRESS: cloudflared # - listens for only explicit requests to cloudflared:53
#
# Note: docker secrets are not suitable for passing the following values.
#  (Only files are passable & cloudflared processes only values)
    env_file:
      - ./secrets/.env.TUNNEL_TOKEN
      - ./secrets/.env.TUNNEL_DNS_UPSTREAM
    expose:
      - "53/tcp"
      - "53/udp"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - srvr
      
  pihole:
    image: pihole/pihole:${PIHOLE_TAG}
    container_name: pihole
    restart: unless-stopped
    depends_on:
      - cloudflared

    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "80:80/tcp"
# With an external DHCP Relay we can fully proxy port 67 since we will only get unicast DHCP traffic
#      - "67:67/udp"
# With dhcphelper doing DHCP Relay it will get the broadcast DCHP traffic and unicast to pihole:67
    expose:
      - "67/udp"

    environment:
      TZ: Australia/Sydney
      PIHOLE_DNS_: "cloudflared" # host for pihole to use for remote resolution
      # WEBPASSWORD: 'set a secure password here or it will be random'
#      FTLCONF_LOCAL_IPV4: 10.1.1.2  # host for clients to use for DNS requests
#      INTERFACE=eth1 # DHCP traffic to be only on static (on eth1)
#      DNSMASQ_LISTENING: all

    volumes:
      - ./pihole/etc/pihole:/etc/pihole
      - ./pihole/etc/dnsmasq.d:/etc/dnsmasq.d
# Use dhcphelper to convert between broadcast DHCP traffic and unicast
    # depends_on:
    #   - dhcphelper

    networks:
      srvr:
      # static:
      #   ipv4_address: 172.31.0.2 # permit traffic from network host (dhcphelper)
    cap_add:
      - NET_ADMIN # Required for DHCP server https://github.com/pi-hole/docker-pi-hole#note-on-capabilities

     
  caddy:
    image: caddy:${CADDY_TAG}
    container_name: caddy
    restart: unless-stopped
    depends_on:
      - cloudflared
    expose:
      - "80" # For HTTP -> HTTPS redirects
      - "443"
    volumes:
# The image cwd is /srv.
# In the absence of /srv/Caddyfile, 
#   /etc/caddy/Caddyfile is default 
#   /usr/share/caddy/index.html is default page served
      - ./caddy/usr/share/caddy:/usr/share/caddy
      - ./caddy/config:/config
      - ./caddy/data:/data
      - ./caddy/etc/caddy:/etc/caddy
      - ./caddy/srv:/srv
      - /etc/localtime:/etc/localtime:ro
    networks:
      - srvr


#   dhcphelper:
#     image: homeall/dhcphelper
#     container_name: dhcphelper
#     restart: unless-stopped
#     environment:
#       IP: "172.31.0.2"  # -s <server IP>
#       TZ: Australia/Sydney
# #    network_mode: "host"
# #    command: -s 172.31.0.2
#     cap_add:
#       - NET_ADMIN
